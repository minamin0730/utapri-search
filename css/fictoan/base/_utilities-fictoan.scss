/*
    FICTOAN
    An intuitive, minimalist responsive HTML+CSS setup
    for designers just starting to code â€” just like me.
    by Sujan Sundareswaran
    Current version: 2.3.0

    https://github.com/sujan-s/fictoan/
    http://sujansundareswaran.com/
*/



/* == UTILITY ============================================================== */

.show-empty   { visibility : hidden !important; }  // Element is merely invisible
.show-nothing { display : none !important; }  // Element isn't rendered at all
.show-inline  { display : inline-block !important; }

.full-width  { width  : 100% !important; }
.full-height { height : 100% !important; }

.pull-left  { float : left; }
.pull-right { float : right; }
.clear-both { clear : both; }


//  For when you want things bang
//   in the centre, both axes
.totally-centre-items,
.totally-center-items {
    display     : flex;
    align-items : center;
}

//  For when you want child elements
//  vertically in the middle
.vertical-centre-items,
.vertical-center-items {
    display     : flex;
    align-items : center;
}

//  Parent div needs a set height
.vertical-centre-this,
.vertical-center-this {
    position  : relative;
    top       : 50%;
    transform : translateY(-50%);
}

//  Parent div needs a set width
.horizontal-centre-this,
.horizontal-center-this {
    position : relative;
    display  : block;
    margin   : 0 auto;
}

//  A thin separator line
hr {
    border : 0;
    height : 1px;
    margin : 4vmax 0;
}

hr.main { background : $colorHue; }
hr.sub  { background : $colorMildGrey; }




/* == BOX MODEL HELPERS===================================================== */

//  Margins for all occasions
.no-margin              { margin : 0 !important; }
.margin-all-fixed       { margin : $measureFixed; }
.margin-all-tiny        { margin : $measureDynamic*01; }
.margin-all-small       { margin : $measureDynamic*02; }
.margin-all-medium      { margin : $measureDynamic*04; }
.margin-all-large       { margin : $measureDynamic*08; }
.margin-all-huge        { margin : $measureDynamic*12; }

.no-margin-top          { margin-top : 0 !important; }
.margin-top-fixed       { margin-top : $measureFixed; }
.margin-top-tiny        { margin-top : $measureDynamic*01; }
.margin-top-small       { margin-top : $measureDynamic*02; }
.margin-top-medium      { margin-top : $measureDynamic*04; }
.margin-top-large       { margin-top : $measureDynamic*08; }
.margin-top-huge        { margin-top : $measureDynamic*12; }

.no-margin-right        { margin-right : 0 !important; }
.margin-right-fixed     { margin-right : $measureFixed; }
.margin-right-tiny      { margin-right : $measureDynamic*01; }
.margin-right-small     { margin-right : $measureDynamic*02; }
.margin-right-medium    { margin-right : $measureDynamic*04; }
.margin-right-large     { margin-right : $measureDynamic*08; }
.margin-right-huge      { margin-right : $measureDynamic*12; }

.no-margin-bottom       { margin-bottom : 0 !important; }
.margin-bottom-fixed    { margin-bottom : $measureFixed; }
.margin-bottom-tiny     { margin-bottom : $measureDynamic*01; }
.margin-bottom-small    { margin-bottom : $measureDynamic*02; }
.margin-bottom-medium   { margin-bottom : $measureDynamic*04; }
.margin-bottom-large    { margin-bottom : $measureDynamic*08; }
.margin-bottom-huge     { margin-bottom : $measureDynamic*12; }

.no-margin-left         { margin-left : 0 !important; }
.margin-left-fixed      { margin-left : $measureFixed; }
.margin-left-tiny       { margin-left : $measureDynamic*01; }
.margin-left-small      { margin-left : $measureDynamic*02; }
.margin-left-medium     { margin-left : $measureDynamic*04; }
.margin-left-large      { margin-left : $measureDynamic*08; }
.margin-left-huge       { margin-left : $measureDynamic*12; }

//  Paddings for all occasions
.no-padding             { padding : 0 !important; }
.padding-all-fixed      { padding : $measureFixed; }
.padding-all-tiny       { padding : $measureDynamic*01; }
.padding-all-small      { padding : $measureDynamic*02; }
.padding-all-medium     { padding : $measureDynamic*04; }
.padding-all-large      { padding : $measureDynamic*08; }
.padding-all-huge       { padding : $measureDynamic*12; }

.no-padding-top         { padding-top : 0 !important; }
.padding-top-fixed      { padding-top : $measureFixed; }
.padding-top-tiny       { padding-top : $measureDynamic*01; }
.padding-top-small      { padding-top : $measureDynamic*02; }
.padding-top-medium     { padding-top : $measureDynamic*04; }
.padding-top-large      { padding-top : $measureDynamic*08; }
.padding-top-huge       { padding-top : $measureDynamic*12; }

.no-padding-right       { padding-right : 0 !important; }
.padding-right-fixed    { padding-right : $measureFixed; }
.padding-right-tiny     { padding-right : $measureDynamic*01; }
.padding-right-small    { padding-right : $measureDynamic*02; }
.padding-right-medium   { padding-right : $measureDynamic*04; }
.padding-right-large    { padding-right : $measureDynamic*08; }
.padding-right-huge     { padding-right : $measureDynamic*12; }

.no-padding-bottom      { padding-bottom : 0 !important; }
.padding-bottom-fixed   { padding-bottom : $measureFixed; }
.padding-bottom-tiny    { padding-bottom : $measureDynamic*01; }
.padding-bottom-small   { padding-bottom : $measureDynamic*02; }
.padding-bottom-medium  { padding-bottom : $measureDynamic*04; }
.padding-bottom-large   { padding-bottom : $measureDynamic*08; }
.padding-bottom-huge    { padding-bottom : $measureDynamic*12; }

.no-padding-left        { padding-left : 0 !important; }
.padding-left-fixed     { padding-left : $measureFixed; }
.padding-left-tiny      { padding-left : $measureDynamic*01; }
.padding-left-small     { padding-left : $measureDynamic*02; }
.padding-left-medium    { padding-left : $measureDynamic*04; }
.padding-left-large     { padding-left : $measureDynamic*08; }
.padding-left-huge      { padding-left : $measureDynamic*12; }

/*  This will render an empty space of
    24% screen height where you add it  */
.empty-spacer {
    display : block;
    height  : 24vmin;
    clear   : both;
}

//  For images and tiles
.shape-rounded  { border-radius : $measureFixed/2; }
.shape-curved   { border-radius : $measureFixed*5000; }
.shape-circular { border-radius : 50%; }

//  Shadows for any element
.shadow-hard { box-shadow : 0 $measureFixed/2 $measureFixed   -2px hsla(0, 0, 0, 0.24); }
.shadow-soft { box-shadow : 0 $measureFixed*2 $measureFixed*4 -8px hsla(0, 0, 0, 0.32); }
.shadow-mild { box-shadow : 0 $measureFixed/4 $measureFixed/4 -2px hsla(0, 0, 0, 0.24); }
.shadow-none { box-shadow : none; }



/* == ICONS ================================================================ */

.icon-tiny   { width : $measureFixed*2; }
.icon-small  { width : $measureFixed*3; }
.icon-medium { width : $measureFixed*4; }
.icon-large  { width : $measureFixed*6; }
.icon-huge   { width : $measureFixed*8; }



/* == CUSTOM INTERFACE ELEMENTS =========================================== */

.card {
    position      : relative;
    width         : 100%;
    height        : auto;
    padding       : $measureFixed*4;
    border        : 1px solid hsla(0, 0%, 0%, 0.04);
}

.card-smaller  { padding : $measureFixed*2 $measureFixed*3; }
.card-smallest { padding : $measureFixed*1 $measureFixed*2; }

.card.shape-circular { border-radius: 50%; }

.full-size-bg {
    position        : absolute;
    width           : 100vw;
    height          : 100vh;
    top             : 0;
    left            : 0;
    //  Add the filename here
    //background      : url("../images/") center top;
    background-size : cover;
    z-index         : -5;
}
.full-size-bg.bg-fixed {
    @extend .full-size-bg;
    position : fixed !important;
}